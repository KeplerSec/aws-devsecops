version: 0.2

env:
  secrets-manager:
    TOKEN: firstSecret:tokenForSonar

phases:
  install:
    runtime-versions:
      java: latest
    commands:
      - echo "Mise à jour des paquets et installation des outils nécessaires"
      - yum update -y && yum install -y jq wget

  build:
    commands:

      # Static Application Security Testing (SAST) - SonarCloud
      - echo "Analyse statique avec SonarCloud"
      - mvn verify sonar:sonar -Dsonar.projectKey=javaprojectaws -Dsonar.organization=javaprojectaws -Dsonar.host.url=https://sonarcloud.io -Dsonar.token=$TOKEN

      # Vérification de la quality gate SonarCloud
      - echo "Vérification de la quality gate SonarCloud"
      - sleep 5
      - |
        quality_status=$(curl -s -u $TOKEN: https://sonarcloud.io/api/qualitygates/project_status?projectKey=javaprojectaws | jq -r '.projectStatus.status')
        echo "Statut de la quality gate : $quality_status"
        if [ "$quality_status" = "ERROR" ]; then
          echo "La quality gate a échoué. Build échoué."
          exit 1
        fi

      # Software Composition Analysis (SCA) - Snyk
      - echo "Analyse SCA avec Snyk"
      - curl -sL https://deb.nodesource.com/setup_18.x | bash -
      - yum install -y nodejs
      - npm install -g snyk
      - snyk --version
      - snyk auth 2f4afa39-c493-4c6d-b34e-080c1a8f9014
      - snyk test --file=pom.xml --json > snyk_report.json || true

      # Dynamic Application Security Testing (DAST) - OWASP ZAP
      - echo "Analyse dynamique avec OWASP ZAP"
      - wget https://github.com/zaproxy/zaproxy/releases/download/v2.16.0/ZAP_2.16.0_Linux.tar.gz
      - tar -xvf ZAP_2.16.0_Linux.tar.gz
      - cd ZAP_2.16.0
      - ./zap.sh -cmd -quickurl https://www.example.com -quickprogress -quickout ../zap_report.html || true
      - cd ..

artifacts:
  files:
    - zap_report.html
    - snyk_report.json
